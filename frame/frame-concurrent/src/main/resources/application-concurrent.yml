# 游戏服务器并发配置示例
# 文件用途：配置frame-concurrent模块的各项参数
# 适用场景：生产环境、测试环境的并发调优

game:
  concurrent:
    # 虚拟线程配置
    virtual-thread:
      enabled: true                    # 是否启用虚拟线程（Java 17暂时模拟实现）
      name-prefix: "game-vt"          # 虚拟线程名称前缀
      core-pool-size: 4               # 核心线程数（当前基于传统线程池）
      max-pool-size: 16               # 最大线程数
    
    # 任务调度器配置
    scheduler:
      core-size: 4                    # 调度器核心线程数
      max-size: 16                    # 调度器最大线程数
      thread-name-prefix: "game-scheduler"  # 调度器线程名前缀
    
    # 时间轮定时器配置
    timer-wheel:
      tick-duration: 100ms            # 时间精度（毫秒）
      wheel-size: 512                 # 时间轮大小（必须是2的幂）
      thread-name-prefix: "game-timer" # 时间轮线程名前缀
    
    # 执行器配置
    executors:
      # 默认执行器
      default:
        type: virtual-thread          # 执行器类型：virtual-thread, fixed, cached, single
        core-pool-size: 8
        max-pool-size: 32
        queue-capacity: 1000
        keep-alive-time: 60s
      
      # IO密集型执行器
      io-intensive:
        type: virtual-thread
        core-pool-size: 16
        max-pool-size: 64
        queue-capacity: 2000
        keep-alive-time: 30s
      
      # CPU密集型执行器  
      cpu-intensive:
        type: fixed
        core-pool-size: 4             # 通常设置为CPU核心数
        max-pool-size: 4
        queue-capacity: 500
    
    # 异步操作配置
    async:
      default-timeout: 30s            # 默认超时时间
      max-retries: 3                  # 默认最大重试次数
      retry-delay: 1000ms             # 默认重试延迟
    
    # 指标监控配置
    metrics:
      enabled: true                   # 是否启用指标收集
      collection-interval: 5s         # 指标收集间隔
      jmx-enabled: true              # 是否启用JMX监控
      
      # 导出配置
      export:
        prometheus:
          enabled: false              # 是否启用Prometheus导出
          port: 9090                 # Prometheus端口
          path: "/metrics"           # 指标路径
    
    # 线程池监控配置
    thread-pool-monitoring:
      enabled: true                   # 是否启用线程池监控
      health-check-interval: 10s     # 健康检查间隔
      
      # 告警阈值
      alert-thresholds:
        queue-size-warning: 800       # 队列大小告警阈值
        queue-size-critical: 950      # 队列大小严重告警阈值
        active-thread-ratio: 0.8     # 活跃线程比例告警阈值
        
    # 任务配置
    tasks:
      # 游戏定时任务配置
      game-timers:
        buff-cleanup:
          cron: "0 */5 * * * *"       # 每5分钟清理过期Buff
          enabled: true
        
        ranking-update:
          cron: "0 0 0 * * *"         # 每天零点更新排行榜
          enabled: true
          
        activity-refresh:
          cron: "0 0 4 * * *"         # 每天凌晨4点刷新活动
          enabled: true

# Spring Boot Actuator配置（用于监控）
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,scheduledtasks,threaddump
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true

# 日志配置
logging:
  level:
    com.lx.gameserver.frame.concurrent: DEBUG
    
# JMX配置
spring:
  jmx:
    enabled: true
    
---
# 开发环境配置
spring:
  config:
    activate:
      on-profile: dev

game:
  concurrent:
    virtual-thread:
      core-pool-size: 2
      max-pool-size: 8
    timer-wheel:
      tick-duration: 200ms
      wheel-size: 256
    metrics:
      collection-interval: 10s
      
logging:
  level:
    com.lx.gameserver.frame.concurrent: TRACE

---
# 生产环境配置  
spring:
  config:
    activate:
      on-profile: prod

game:
  concurrent:
    virtual-thread:
      core-pool-size: 8
      max-pool-size: 32
    scheduler:
      core-size: 8
      max-size: 32
    timer-wheel:
      tick-duration: 50ms
      wheel-size: 1024
    metrics:
      collection-interval: 30s
      export:
        prometheus:
          enabled: true
          
logging:
  level:
    com.lx.gameserver.frame.concurrent: INFO