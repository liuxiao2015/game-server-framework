<?xml version="1.0" encoding="UTF-8"?>
<!--
  文件名: pom.xml
  用途: 场景管理业务模块的Maven配置文件
  实现内容:
    - 定义场景管理模块的基本信息和依赖
    - 配置构建参数和插件
    - 管理与框架其他模块的依赖关系
  技术选型:
    - Maven 构建管理
    - Spring Boot 依赖注入和配置
    - Actor模型框架依赖
    - ECS实体组件系统依赖
  依赖关系:
    - 继承父项目的版本管理
    - 依赖frame-actor、frame-ecs等框架模块
    - 依赖common-core公共核心模块
  作者: liuxiao2015
  日期: 2025-05-29
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 父项目 -->
    <parent>
        <groupId>com.lx.gameserver</groupId>
        <artifactId>game-server-framework</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <!-- 项目坐标 -->
    <artifactId>business-scene</artifactId>
    <packaging>jar</packaging>
    <name>Business Scene Module</name>
    <description>游戏服务器场景管理业务模块</description>

    <!-- 依赖配置 -->
    <dependencies>
        <!-- Spring Boot Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        
        <!-- Spring Boot Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- Spring Boot WebSocket -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>

        <!-- 公共核心模块 -->
        <dependency>
            <groupId>com.lx.gameserver</groupId>
            <artifactId>common-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- 公共API模块 -->
        <dependency>
            <groupId>com.lx.gameserver</groupId>
            <artifactId>common-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Actor框架 -->
        <dependency>
            <groupId>com.lx.gameserver</groupId>
            <artifactId>frame-actor</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- ECS框架 -->
        <dependency>
            <groupId>com.lx.gameserver</groupId>
            <artifactId>frame-ecs</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- 事件框架 -->
        <dependency>
            <groupId>com.lx.gameserver</groupId>
            <artifactId>frame-event</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- 缓存框架 -->
        <dependency>
            <groupId>com.lx.gameserver</groupId>
            <artifactId>frame-cache</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- 并发框架 -->
        <dependency>
            <groupId>com.lx.gameserver</groupId>
            <artifactId>frame-concurrent</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Jackson JSON处理 -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- JSR-250 注解支持 -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>

        <!-- Caffeine本地缓存 -->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>

        <!-- Guava工具库 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!-- Apache Commons工具库 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- 日志 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- 测试依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- 构建配置 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>